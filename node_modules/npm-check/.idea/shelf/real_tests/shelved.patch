Index: test/test.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- test/test.js	(revision )
+++ test/test.js	(revision )
@@ -0,0 +1,60 @@
+#!/usr/bin/env node
+
+const nock = require('nock');
+const npmCheck = require('../lib/index');
+const _ = require('lodash');
+const output = require('../lib/output');
+
+import test from 'ava';
+
+test(async t =>  {
+
+    var options = {
+           update: false,
+           global: false,
+           skipUnused: false,
+           ignoreDev: false,
+           debug: false,
+           path: __dirname + '/fixtures/require'
+       };
+
+       module.exports =
+
+    nock('https://registry.npmjs.org:443')
+      .get('/used')
+      .reply(200, {
+          "dist-tags":{"latest":"2.0.0"},
+          "versions":{
+              "1.0.0": {homepage: "http://used.2.0.0"},
+              "2.0.0": {homepage: "http://used.2.0.0"}}});
+
+    nock('https://registry.npmjs.org:443')
+      .get('/not-used')
+      .reply(200, {
+          "dist-tags":{"latest":"2.0.0"},
+          "versions":{
+              "1.0.0": {homepage: "http://used.2.0.0"},
+              "2.0.0": {homepage: "http://used.2.0.0"}}});
+
+
+    //nock.recorder.rec();
+
+    console.log(1);
+    await npmCheck(options)
+        .catch(function (err) {
+            console.log('[npm-check]', err.stack || err);
+            process.exit(1);
+        })
+        .then(_.partialRight(options.update ? update : output, options))
+        .catch(function (err) {
+            console.log('[npm-check]', err.stack || err);
+            process.exit(1);
+        });
+
+    console.log(2);
+
+
+    t.same([1, 2], [1, 2]);
+    t.end();
+});
+
Index: test/fixtures/require/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- test/fixtures/require/index.js	(revision )
+++ test/fixtures/require/index.js	(revision )
@@ -0,0 +1,3 @@
+'use strict';
+
+var u = require('used');
\ No newline at end of file
Index: test/fixtures/require/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- test/fixtures/require/package.json	(revision )
+++ test/fixtures/require/package.json	(revision )
@@ -0,0 +1,6 @@
+{
+  "dependencies": {
+    "used": "1.0.0",
+    "not-used": "1.0.0"
+  }
+}
Index: test/fixtures/scoped-modules/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- test/fixtures/scoped-modules/package.json	(revision )
+++ test/fixtures/scoped-modules/package.json	(revision )
@@ -0,0 +1,10 @@
+{
+  "main": "index.js",
+  "dependencies": {
+    "@homerjam/dummy-module": "^1.0.0",
+    "@sindresorhus/df": "*",
+    "@websdk/nap": "*",
+    "changelog": "^1.0.7",
+    "xml": "^1.0.0"
+  }
+}
Index: test/fixtures/bin-directory/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- test/fixtures/bin-directory/package.json	(revision )
+++ test/fixtures/bin-directory/package.json	(revision )
@@ -0,0 +1,10 @@
+{
+  "main": "index.js",
+  "dependencies": {
+    "@homerjam/dummy-module": "^1.0.0",
+    "@sindresorhus/df": "*",
+    "@websdk/nap": "*",
+    "changelog": "^1.0.7",
+    "xml": "^1.0.0"
+  }
+}
Index: test/fixtures/require/node_modules/used/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- test/fixtures/require/node_modules/used/package.json	(revision )
+++ test/fixtures/require/node_modules/used/package.json	(revision )
@@ -0,0 +1,3 @@
+{
+  "version": "1.0.0"
+}
\ No newline at end of file
Index: test/fixtures/scoped-modules/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- test/fixtures/scoped-modules/index.js	(revision )
+++ test/fixtures/scoped-modules/index.js	(revision )
@@ -0,0 +1,3 @@
+'use strict';
+require('@sindresorhus/df');
+require('xml');
\ No newline at end of file
Index: test/fixtures/require/node_modules/not-used/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- test/fixtures/require/node_modules/not-used/package.json	(revision )
+++ test/fixtures/require/node_modules/not-used/package.json	(revision )
@@ -0,0 +1,3 @@
+{
+  "version": "1.0.0"
+}
\ No newline at end of file
Index: lib/output.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lib/output.js	(date 1444613217000)
+++ lib/output.js	(revision )
@@ -56,6 +56,7 @@
 }
 
 function outputConsole(modules, options) {
+    console.log('modules');
     if (options.debug) {
         console.log(modules);
     }
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- package.json	(date 1444613217000)
+++ package.json	(revision )
@@ -4,7 +4,7 @@
   "description": "Check for outdated, incorrect, and unused dependencies.",
   "main": "lib",
   "scripts": {
-    "test": "xo && grunt test && bin/cli.js"
+    "test": "xo && ava ./test"
   },
   "xo": {
     "space": 4,
@@ -71,6 +71,7 @@
     "update-notifier": "^0.5.0"
   },
   "devDependencies": {
+    "ava": "^0.2.0",
     "grunt": "^0.4.0",
     "grunt-cli": "^0.1.13",
     "grunt-mocha-test": "^0.12.7",
@@ -78,6 +79,7 @@
     "grunt-templates-dylang": "^1.0.9",
     "load-grunt-tasks": "^3.3.0",
     "mocha": "^2.3.3",
+    "nock": "^2.15.0",
     "time-grunt": "^1.2.1",
     "xo": "^0.9.0"
   }
Index: lib/cli.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lib/cli.js	(date 1444613217000)
+++ lib/cli.js	(revision )
@@ -33,7 +33,7 @@
     path: program.dir || process.cwd()
 };
 
-npmCheck(options)
+module.exports = npmCheck(options)
     .catch(function (err) {
         console.log('[npm-check]', err.stack || err);
         process.exit(1);
@@ -42,5 +42,4 @@
     .catch(function (err) {
         console.log('[npm-check]', err.stack || err);
         process.exit(1);
-    })
-    .done();
+    });
Index: lib/check-unused.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lib/check-unused.js	(date 1444613217000)
+++ lib/check-unused.js	(revision )
@@ -6,7 +6,7 @@
 function checkUnused(options) {
     var defer = q.defer();
 
-    if (options.global || options.update || options.packages || options.skipUnused || !options.packageJson.name) {
+    if (options.global || options.update || options.packages || options.skipUnused /* || !options.packageJson.name */) {
         return defer.resolve();
     }
 
